.box1{
    .box2{
        color: red;
    }
    >.box3{
        color:red;

        &:hover{
            color: blue;
        }
    }

    // 为box1设置一个hover
    // & 就表示外层的父元素
    &:hover{
        color: orange;
    }

    div &{
        width: 100px;
    }
}

.p1{
    width: 100px;
    height: 200px;
}

// :extend() 对当前选择器扩展指定选择器的样式（选择器分组）
.p2:extend(.p1){
    color: red;
}

.p3{
    // 直接对指定的样式进行引用，这里就相当于将p1的样式在这里进行了复制
    // mixin 混合
    .p1();
}

// 使用类选择器时可以在选择器后面添加一个括号，这样我们实际上就创建了一个mixins
// 个人理解相当于一个构造函数，谁用谁调，但他自己本身不会显示
.p4(){
    width: 100px;
    height: 200px;
    background-color: #fafafa;
}
.p5{
    .p4;
}

// 混合函数 在混合函数中可以直接设置变量
// :后面跟值表示是默认值，相当于构造函数传参
.test(@w:100px,@h:200px,@bg-clolr:red){
    width: @w;
    height: @h;
    border: 1px solid @bg-clolr;
}
div{
    // 调用混合函数，按顺序传递参数
    // .test(200px,300px,#bfa);
    .test(300px) // 只穿一个就是第一个，其他的默认
    // .test(@bg-color:red; @h:100%; @w:300px)
}

span{
    color: average(red,blue);
}

